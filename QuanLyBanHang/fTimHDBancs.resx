<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAABAAAAAAAA////ADWk4gCHYFgA+fHZAIRdWgDozq8AB4TaAKB6fQAFZrwA+e/VAPv3
        6QD69eMACFeoAPfu0gD69OIA7Ni5AOzVtAAAAAAA7dm6AAAAAAD058oAAAAAAAAAAADitpMAr5meAGU3
        OQD58NcAB0mVAAAAAABeMjYAAAAAAO7avQAAAAAAAAAAAAAAAAD9+vMA/PblAAAAAAAAAAAAAAAAAAAA
        AAD26M4A8uLGAAAAAAAAAAAA+fTdAAAAAADq0bEAh15YAAAAAABqQEUA+fPbAAAAAACUcXsA+PLbAOnI
        pgDkwZ4A///vAPft0AAAAAAAAAAAAAAAAAAAAAAAAAAAACtSjAAAAAAAAAAAAGrG9gAAAAAAAKnzAPnu
        1AAAAAAAAAAAAAAAAAAAAAAAzqCCAAAAAAAdT4oA6dKwAPz56wC/mokAAAAAAAAAAAAAAAAAAAAAAAAA
        AADlv5sA9uzOAAAAAAC2hHMAAAAAAHtRUgAAAAAAesnyAAAAAAAAAAAA0Z18AAAAAAAAAAAAdMj3ALaV
        kgAApvUAAAAAAAVbrQAAAAAAqZGWAAAAAAD58tMAI1ueAAAAAACuhnMAAAAAAObGpABvREAAAAAAAAAA
        AAD479oAvZR/AACB2wAAAAAAAAAAAPHiyQAAAAAAAAAAAAAAAAD/+98AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHZLnAGU6PQDy4sUA5smpAAAAAAD8+ewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6MyqAAB1
        zwAAAAAAAAAAAAAAAADu270AAAAAAAAAAAAAAAAAAJ3yAAAAAAClgH0AqIySAAAAAAAAAAAAAAAAAPv4
        6gAAAAAA8uHBAAAAAAAAAAAAAAAAAAAAAAAAAAAABazzAPDewADy4MIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOC0jQAAAAAA6tSzAAAAAAAAAAAAAAAAAObEoAAAAAAAAAAAAIlSUQAAAAAAgaXEAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlMmQAAAAAA+/XlAAAAAADj2coAb8f3AAAAAACyg28AAAAAAAAA
        AADhvJoAAAAAAAAAAAAAAAAA+vPfAHVNVAAAAAAAAAAAAPPeugAFYLcAAAAAAH9ZYAAAAAAAAAAAAOPD
        oQAAAAAAAAAAAKLe+AAkTYcAAAAAAPz57QD++/QAAHfQAAAAAAD///4AAAAAAAAAAAAAAAAAf1hfAAAA
        AAAAAAAAAAAAAKiLjwAAAAAAAAAAAJPW+QAAAAAAv5uKAAAAAAAAAAAA//fYAAAAAADz5ccAAAAAAOjP
        rgAAAAAAAAAAAAAAAAAAAAAAAAAAABERERERERERERERERFA4BERERERERERERERERFsmWVNERERERER
        ERERERHEhKhFGxERERERERERERFnY0MGDBERERERERERERHXXfHJDBERERERAgIwcR0Hkd8BCBERERER
        BMg5ffZuGb125BERERERBAAjCgMND6lbuxERERERBADm46ADDU60S9kREREREYVP4goLJNJXBTfLERER
        EREyC8YONnSi3JW4dRERERER0wlGOjMqAC0UVlkREREREepr+IYpeYkaqrKbERERERER89aQzh8S+jju
        ERERERERETVQEC+HcBdgEREREREREREREZxpZBhgERERERERERH/+QAA//AAAP/gAAD/wQAA/4MAAOAH
        AADADwAAgB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAgD8AAIB/AADg/wAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAN4ayGjlz9W4vI2cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAERpXCAI7s/wCa9P8fS4D/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABElgEJU6PYK6f1/xbA//8AoPP/AVClqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABNqAENYrLiaMT4/2vU//8nnOb/B1SmngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAcfM7bpOP+/7Xu//9Mquf/AVyzmgAAAAAAAAAAAAAAAAAAAABJGhoCSxwdhmE1
        Nb17U03RXzM1wVsiInuOcYCdNZ7o/731//93xO//AGXCnAAAAAAAAAAAAAAAAAAAAABOICA6fFZV/N/T
        y/////f////n///+2//Wu57/kFhN/4F7jv8XlOT/AYDZlQAAAAAAAAAAAAAAAAAAAABVJigbiGVl////
        /////////fjo//ry3P/47c////HP//beuv+fWUX/S16IWgAAAAAAAAAAAAAAAAAAAAAAAAAAZzs8m/bv
        6v///////vv1//v36P/59Nr/9evM/+bOrP/z2rj/4r2Z/31MUKYAAAAAAAAAAAAAAAAAAAAAAAAAAI5v
        bfT//////fvx//z47v/68+H//PXj//fw1//w38H/58mp//DRq/+gc2nshF9mDwAAAAAAAAAAAAAAAAAA
        AACVeHX3///8//ny4f/6897/+vfl//rx3P/x38D/7dm6/+zYuf/tyqX/r4Z5/4lpcigAAAAAAAAAAAAA
        AAAAAAAAmXx3+f//6//57tX/+vHX//ny2v/y48b//vv5////8P/v38D/6cae/6x/dfSUeIEaAAAAAAAA
        AAAAAAAAAAAAAItlZrD36sj/+evM/+/cvv/05Mf/8OHF//387P/69d3/79y8/9+wh/+if3/LAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/W2NDupmM//3sxP/t1LD/5cqo/+/bv//y48T/8t68/+q/k/+7jn3/pouVRwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIpldGu+mo3/5sel/+/Lo//syKL/6L6U/9yqhv++lYX/q5SZZAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl3uFNqqIiaO3mZD5wJuR87ybkveylpOrrZylLgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+AAA//AAAP/AAAD/gQAA/4MAAMAHAACADwAAAB8AAAAf
        AAAADwAAAA8AAAAPAAAAHwAAAB8AAIA/AADAfwAA
</value>
  </data>
</root>